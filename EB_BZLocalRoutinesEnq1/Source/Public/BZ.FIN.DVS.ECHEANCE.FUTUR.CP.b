*-----------------------------------------------------------------------------
* <Rating>728</Rating>
* Modification History:
* ZIT-UPG-R13-R19 : Converted $INCLUDE TO $INSERT, Variables initialized, VM to @VM, READ to F.READ
*                   Converted CONVERT to CHANGE
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE BZ.FIN.DVS.ECHEANCE.FUTUR.CP
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.LD.LOANS.AND.DEPOSITS
    $INSERT I_F.LMM.ACCOUNT.BALANCES
    $INSERT I_F.DEPT.ACCT.OFFICER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CUSTOMER
    $INSERT I_F.CATEGORY
    $INSERT I_F.POSTING.RESTRICT
    $INSERT I_F.TRANSACTION
    $INSERT I_F.SECTOR
    $INSERT I_F.IS.H.PRODUCTS


MAIN:


    GOSUB INIT
    GOSUB PREPARE.CONDITION
    GOSUB PROCESS
RETURN

INIT:
    Y.DATE.EXEC = DATE()
    Y.TIME.EXEC = TIME()

    Y.YEAR = OCONV(Y.DATE.EXEC,"DY4")
    Y.MONTH = OCONV(Y.DATE.EXEC,"DM")
    IF LEN(Y.MONTH) EQ 1 THEN
        Y.MONTH = '0' : Y.MONTH
    END

    Y.DAY = OCONV(Y.DATE.EXEC,"DD")
    IF LEN(FT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatus
        Y.DAY = '0' : Y.DAY
    END
    Y.TFT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatus.YEAR : Y.MONTH : Y.DAY
    Y.TEMP.TIME.PART = OCONV(Y.TIME.EXEC,'MTS')
    CHANGE ':' TO '-' IN Y.TEMP.TIME.PART

    OUT.FILE='./RELEVES.HA.OUT/LD_SCHEDULES_REPORT_' : Y.TEMP.DATE.PART : '_' : Y.TEMP.TIME.PART : '.csv'
    OPENSEQ OUT.FILE TO F.OUTFILE ELSE CRT 'New file ':OUT.FILE:' Opened'

    NBR.JOURS=""
    FN.LD="F.LD.LOANS.AND.DEPOSITS"
    F.LD=""
    LD.ERR=""
    R.LD.LOANS.AND.DEPOSITS=""
    
    FN.STMT="F.STMT.ENTRY"
    F.STMT=""
    YERR=""
    R.STMT=""

    FN.LMM.ACCOUNT.BALANCES = "F.LMM.ACCOUNT.BALANCES"
    F.LMM.ACCOUNT.BALANCES = ""

    Y.CONDITION=""

    COMPTEB.DataAccess.Opf=0


    LEB.DataAccess.OpfTE "REF.LD" IN D.FIELDS<1> SETTING REF.LD.POS THEN
        REF.LD = D.RANGE.AND.VALUE<REF.LD.POS>
    END

    LOCATE "ID.CLIENT"FT.AdhocChargeRequests.AcChargeRequest.ChgRelatedRef SETTING ID.CLIENT.POS THEN
        IEB.DataAccess.FReadNT = D.RANGE.AND.VALUE<ID.CLIENT.POS>
    END

    LOCATE "LOAN.TYPE" IN D.FIELDS<1> SETTING LOAN.TYPE.POS THEN
        LOAN.TYPE= D.RANGE.AEB.BZLocalTable1.BzCoffreLoyer.BzCoffreLoyerRefLoyer.POS>
    END

    LOCATEEB.SystemTables.setE()*-----------------------------------------------------------------------------
* <Rating>728</Rating>
* Modification History:
* ZIT-UPG-R13-R19 : Converted $INCLUDE TO $INSERT, Variables initialized, VM to @VM, READ to F.READ
*                   Converted CONVERT to CHANGE
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE BZ.FIN.DVS.ECHEANCE.FUTUR.CP
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.LD.LOANS.AND.DEPOSITS
    $INSERT I_F.LMM.ACCOUNT.BALANCES
    $INSERT I_F.DEPT.ACCT.OFFICER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CUSTOMER
    $INSERT I_F.CATEGORY
    $INSERT I_F.POSTING.RESTRICT
    $INSERT I_F.TRANSACTION
    $INSERT I_F.SECTOR
    $INSERT I_F.IS.H.PRODUCTS


MAIN:


    GOSUB INIT
    GOSUB PREPARE.CONDITION
    GOSUB PROCESS
RETURN

INIT:
    Y.DATE.EXEC = DATE()
    Y.TIME.EXEC = TIME()

    Y.YEAR = OCONV(Y.DATE.EXEC,"DY4")
    Y.MONTH = OCONV(Y.DATE.EXEC,"DM")
    IF LEN(Y.MONTH) EQ 1 THEN
        Y.MONTH = '0' : Y.MONTH
    END

    Y.DAY = OCONV(Y.DATE.EXEC,"DD")
    IF LEN(Y.DAY) EQ 1 THEN
        Y.DAY = '0' : Y.DAY
    END
    Y.TEMP.DATE.PART = Y.YEAR : Y.MONTH : Y.DAY
    Y.TEMP.TIME.PART = OCONV(Y.TIME.EXEC,'MTS')
    CHANGE ':' TO '-' IN Y.TEMP.TIME.PART

    OUT.FILE='./RELEVES.HA.OUT/LD_SCHEDULES_REPORT_' : Y.TEMP.DATE.PART : '_' : Y.TEMP.TIME.PART : '.csv'
    OPENSEQ OUT.FILE TO F.OUTFILE ELSE CRT 'New file ':OUT.FILE:' Opened'

    NBR.JOURS=""
    FN.LD="F.LD.LOANS.AND.DEPOSITS"
    F.LD=""
    LD.ERR=""
    R.LD.LOANS.AND.DEPOSITS=""
    
    FN.STMT="F.STMT.ENTRY"
    F.STMT=""
    YERR=""
    R.STMT=""

    FN.LMM.ACCOUNT.BALANCES = "F.LMM.ACCOUNT.BALANCES"
    F.LMM.ACCOUNT.BALANCES = ""

    Y.CONDITION=""

    COMPTEUR=0


    LOCATE "REF.LD" IN D.FIELDS<1> SETTING REF.LD.POS THEN
        REF.LD = D.RANGE.AND.VALUE<REF.LD.POS>
    END

    LOCATE "ID.CLIENT" IN D.FIELDS<1> SETTING ID.CLIENT.POS THEN
        ID.CLIENT = D.RANGE.AND.VALUE<ID.CLIENT.POS>
    END

    LOCATE "LOAN.TYPE" IN D.FIELDS<1> SETTING LOAN.TYPE.POS THEN
        LOAN.TYPE= D.RANGE.AND.VALUE<LOAN.TYPE.POS>
    END

    LOCATE "AGENCE" IN D.FIELDS<1> SETTING AGENCE.POS THEN
        AGENCE = D.REB.BZLocalTable1.BzCoffreLoyer.BzCoffreLoyerRefLoyerNCE.PEB.SystemTables.getIdNew()END

    FN.ACCT.TRAEB.DataAccess.FWrite= 'F.ACCT.TRANS.FWD'
    F.ACCT.TRANS.FWD = ''
    R.ACCT.TRANS.FWD = ''
    ERR.EB.SystemTables.setAf()*-----------------------------------------------------------------------------
* <Rating>728</Rating>
* Modification History:
* ZIT-UPG-R13-R19 : Converted $INCLUDE TO $INSERT, Variables initialized, VM to @VM, READ to F.READ
*                   Converted CONVERT to CHANGE
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE BZ.FIN.DVS.ECHEANCE.FUTUR.CP
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.LD.LOANS.AND.DEPOSITS
    $INSERT I_F.LMM.ACCOUNT.BALANCES
    $INSERT I_F.DEPT.ACCT.OFFICER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CUSTOMER
    $INSERT I_F.CATEGORY
    $INSERT I_F.POSTING.RESTRICT
    $INSERT I_F.TRANSACTION
    $INSERT I_F.SECTOR
    $INSERT I_F.IS.H.PRODUCTS


MAIN:


    GOSUB INIT
    GOSUB PREPARE.CONDITION
    GOSUB PROCESS
RETURN

INIT:
    Y.DATE.EXEC = DATE()
    Y.TIME.EXEC = TIME()

    Y.YEAR = OCONV(Y.DATE.EXEC,"DY4")
    Y.MONTH = OCONV(Y.DATE.EXEC,"DM")
    IF LEN(Y.MONTH) EQ 1 THEN
        Y.MONTH = '0' : Y.MONTH
    END

    Y.DAY = OCONV(Y.DATE.EXEC,"DD")
    IF LEN(Y.DAY) EQ 1 THEN
        Y.DAY = '0' : Y.DAY
    END
    Y.TEMP.DATE.PART = Y.YEAR : Y.MONTH : Y.DAY
    Y.TEMP.TIME.PART = OCONV(Y.TIME.EXEC,'MTS')
    CHANGE ':' TO '-' IN Y.TEMP.TIME.PART

    OUT.FILE='./RELEVES.HA.OUT/LD_SCHEDULES_REPORT_' : Y.TEMP.DATE.PART : '_' : Y.TEMP.TIME.PART : '.csv'
    OPENSEQ OUT.FILE TO F.OUTFILE ELSE CRT 'New file ':OUT.FILE:' Opened'

    NBR.JOURS=""
    FN.LD="F.LD.LOANS.AND.DEPOSITS"
    F.LD=""
    LD.ERR=""
    R.LD.LOANS.AND.DEPOSITS=""
    
    FN.STMT="F.STMT.ENTRY"
    F.STMT=""
    YERR=""
    R.STMT=""

    FN.LMM.ACCOUNT.BALANCES = "F.LMM.ACCOUNT.BALANCES"
    F.LMM.ACCOUNT.BALANCES = ""

    Y.CONDITION=""

    COMPTEUR=0


    LOCATE "REF.LD" IN D.FIELDS<1> SETTING REF.LD.POS THEN
        REF.LD = D.RANGE.AND.VALUE<REF.LD.POS>
    END

    LOCATE "ID.CLIENT" IN D.FIELDS<1> SETTING ID.CLIENT.POS THEN
        ID.CLIENT = D.RANGE.AND.VALUE<ID.CLIENT.POS>
    END

    LOCATE "LOAN.TYPE" IN D.FIELDS<1> SETTING LOAN.TYPE.POS THEN
        LOAN.TYPE= D.RANGE.AND.VALUE<LOAN.TYPE.POS>
    END

    LOCATE "AGENCE" IN D.FIELDS<1> SETTING AGENCE.POS THEN
        AGENCE = D.RANGE.AND.VALUE<AGENCE.POS>
    END

    FN.ACCT.TRANS.FWD = 'F.ACCT.TRANS.FWD'
    F.ACCT.TRANS.FWD = ''
    R.ACCT.TRANS.FWD = ''
    ERR.ACCFT.AdhocChargeRequests.AcChargeRequest.ChgRelatedRef'
    CALLEB.SystemTables.setE()*-----------------------------------------------------------------------------
* <Rating>728</Rating>
* Modification History:
* ZIT-UPG-R13-R19 : Converted $INCLUDE TO $INSERT, Variables initialized, VM to @VM, READ to F.READ
*                   Converted CONVERT to CHANGE
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE BZ.FIN.DVS.ECHEANCE.FUTUR.CP
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.STMT.ENTRY
    $INSERT I_F.LD.LOANS.AND.DEPOSITS
    $INSERT I_F.LMM.ACCOUNT.BALANCES
    $INSERT I_F.DEPT.ACCT.OFFICER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.CUSTOMER
    $INSERT I_F.CATEGORY
    $INSERT I_F.POSTING.RESTRICT
    $INSERT I_F.TRANSACTION
    $INSERT I_F.SECTOR
    $INSERT I_F.IS.H.PRODUCTS


MAIN:


    GOSUB INIT
    GOSUB PREPARE.CONDITION
    GOSUB PROCESS
RETURN

INIT:
    Y.DATE.EXEC = DATE()
    Y.TIME.EXEC = TIME()

    Y.YEAR = OCONV(Y.DATE.EXEC,"DY4")
    Y.MONTH = OCONV(Y.DATE.EXEC,"DM")
    IF LEN(Y.MONTH) EQ 1 THEN
        Y.MONTH = '0' : Y.MONTH
    END

    Y.DAY = OCONV(Y.DATE.EXEC,"DD")
    IF LEN(Y.DAY) EQ 1 THEN
        Y.DAY = '0' : Y.DAY
    END
    Y.TEMP.DATE.PART = Y.YEAR : Y.MONTH : Y.DAY
    Y.TEMP.TIME.PART = OCONV(Y.TIME.EXEC,'MTS')
    CHANGE ':' TO '-' IN Y.TEMP.TIME.PART

    OUT.FILE='./RELEVES.HA.OUT/LD_SCHEDULES_REPORT_' : Y.TEMP.DATE.PART : '_' : Y.TEMP.TIME.PART : '.csv'
    OPENSEQ OUT.FILE TO F.OUTFILE ELSE CRT 'New file ':OUT.FILE:' Opened'

    NBR.JOURS=""
    FN.LD="F.LD.LOANS.AND.DEPOSITS"
    F.LD=""
    LD.ERR=""
    R.LD.LOANS.AND.DEPOSITS=""
    
    FN.STMT="F.STMT.ENTRY"
    F.STMT=""
    YERR=""
    R.STMT=""

    FN.LMM.ACCOUNT.BALANCES = "F.LMM.ACCOUNT.BALANCES"
    F.LMM.ACCOUNT.BALANCES = ""

    Y.CONDITION=""

    COMPTEUR=0


    LOCATE "REF.LD" IN D.FIELDS<1> SETTING REF.LD.POS THEN
        REF.LD = D.RANGE.AND.VALUE<REF.LD.POS>
    END

    LOCATE "ID.CLIENT" IN D.FIELDS<1> SETTING ID.CLIENT.POS THEN
        ID.CLIENT = D.RANGE.AND.VALUE<ID.CLIENT.POS>
    END

    LOCATE "LOAN.TYPE" IN D.FIELDS<1> SETTING LOAN.TYPE.POS THEN
        LOAN.TYPE= D.RANGE.AND.VALUE<LOAN.TYPE.POS>
    END

    LOCATE "AGENCE" IN D.FIELDS<1> SETTING AGENCE.POS THEN
        AGENCE = D.RANGE.AND.VALUE<AGENCE.POS>
    END

    FN.ACCT.TRANS.FWD = 'F.ACCT.TRANS.FWD'
    F.ACCT.TRANS.FWD = ''
    R.ACCT.TRANS.FWD = ''
    ERR.ACCT.TRANS.FWD = ''
    CALL OPF(FN.ACCT.TRANS.FWD,F.ACCT.TRANS.FWD)

    CALL OPF(FN.LD,F.LD)
    CALL OPF(FN.STMT,F.STMT)
    CALL OPF(FN.LMM.ACCOUNT.BALANCES,F.LMM.ACCOUNT.BALANCES)

    FN.IS.H.PRODUCTS = 'F.IS.H.PRODUCTS'
    F.IS.H.PRODUCTS = ''
    CALL OPF(FN.IS.H.PRODUCTS,F.IS.H.PRODUCTS)

    Y.LOG.LINE = "LD.ID;CUSTOMER.ID;CURRENCY;CATEGORY;LOAN.DESC;DRAWDOWN.AMOUNT;AMOUNT;VALUE.DATE;FIN.MAT.DATE;INTEREST.RATE;MIS.ACCT.OFFICER;AMOUNT.FCY;AMOUNT.LCY;DATE.SCHEDULE;TXN.CODE"
    WRITESEQ Y.LOG.LINE ON F.OUTFILE ELSE CRT "Unable de write out"
RETURN

PROCESS:
    DEBUG

    SQL.LD = "SELECT " : FN.LD
    LD.ERROR=''
    LD.IDS=''
    LD.COUNT=''
    CALL EB.READLIST(SQL.LD , LD.IDS,'',LD.COUNT,LD.ERROR)

    FOR LD.SEQUENCE = 1 TO LD.COUNT
        REMOVE LD.ID FROM LD.IDS SETTING LD.POS

        CALL F.READ(FN.LD,LD.ID,R.LD.LOANS.AND.DEPOSITS,F.LD,LD.ERR)
        Y.CUSTOMER.ID = R.LD.LOANS.AND.DEPOSITS<LD.CUSTOMER.ID>
        Y.CURRENCY = R.LD.LOANS.AND.DEPOSITS<LD.CURRENCY>
        Y.CATEGORY = R.LD.LOANS.AND.DEPOSITS<LD.CATEGORY>
        Y.LOAN.TYPE = R.LD.LOANS.AND.DEPOSITS<LD.LOCAL.REF,3>

        Y.DRAWDOWN.AMOUNT = R.LD.LOANS.AND.DEPOSITS<LD.DRAWDOWN.NET.AMT>
        Y.AMOUNT = R.LD.LOANS.AND.DEPOSITS<LD.AMOUNT>
        Y.VALUE.DATE = R.LD.LOANS.AND.DEPOSITS<LD.VALUE.DATE>
        Y.FIN.MAT.DATE = R.LD.LOANS.AND.DEPOSITS<LD.FIN.MAT.DATE>
        Y.INTEREST.RATE = R.LD.LOANS.AND.DEPOSITS<LD.INTEREST.RATE>
        Y.MIS.ACCT.OFFICER = R.LD.LOANS.AND.DEPOSITS<LD.MIS.ACCT.OFFICER>

        R.IS.H.PRODUCTS = ''
        YERR = ''
        CALL F.READ(FN.IS.H.PRODUCTS,Y.LOAN.TYPE,R.IS.H.PRODUCTS,F.IS.H.PRODUCTS,YERR)
        Y.LOAN.DESC = R.IS.H.PRODUCTS<IS.PROD.DESCRIPTION>

        SEL.CMD = "SELECT ":FN.ACCT.TRANS.FWD:" WITH @ID LIKE '...":LD.ID:"'"

        CALL EB.READLIST(SEL.CMD,ACCT.TRANS.FWD.IDS,'',NO.OF.IDS,'')
    CRT "Selecting ACCT TRANS FWD :":NO.OF.IDS:"For LD :" :LD.ID :"  Running : ":LD.SEQUENCE: "/": LD.COUNT
        LOOP
            REMOVE ACCT.TRANS.FWD.ID FROM ACCT.TRANS.FWD.IDS SETTING NEXT.ID
        WHILE ACCT.TRANS.FWD.ID : NEXT.ID DO
*         READ R.ACCT.TRANS.FWD FROM F.ACCT.TRANS.FWD,ACCT.TRANS.FWD.ID THEN
            CALL F.READ (FN.ACCT.TRANS.FWD, ACCT.TRANS.FWD.ID, R.ACCT.TRANS.FWD, F.ACCT.TRANS.FWD,ERR.ACCT.TRANS.FWD)
            NO.OF.STMT.IDS = DCOUNT(R.ACCT.TRANS.FWD,@FM)
            FOR STMT.COUNT = 1 TO NO.OF.STMT.IDS
                STMT.ID = R.ACCT.TRANS.FWD<STMT.COUNT>
                R.STMT = ''
                CALL F.READ(FN.STMT,STMT.ID,R.STMT,F.STMT,YERR)

                IF R.STMT<AC.STE.VALUE.DATE> GT '20201231' THEN CONTINUE

                ACCOUNT.NUMBER = R.STMT<AC.STE.ACCOUNT.NUMBER>
                CURRENCY = R.STMT<AC.STE.CURRENCY>
                DEPT.OPERATION = R.STMT<AC.STE.DEPARTMENT.CODE>
                AMOUNT.LCY = R.STMT<AC.STE.AMOUNT.LCY>
                AMOUNT.FCY = R.STMT<AC.STE.AMOUNT.FCY>
                PRODUCT.CATEGORY = R.STMT<AC.STE.PRODUCT.CATEGORY>
                DATE.OPERATION = R.STMT<AC.STE.BOOKING.DATE>
                DATE.VALEUR.OP = R.STMT<AC.STE.VALUE.DATE>
                REF.TRANSACTION = R.STMT<AC.STE.TRANS.REFERENCE>
                Y.TXN.CODE = R.STMT<AC.STE.TRANSACTION.CODE>


                Y.LOG.TEMP<1,1> = LD.ID
                Y.LOG.TEMP<1,2> = Y.CUSTOMER.ID
                Y.LOG.TEMP<1,3> = Y.CURRENCY
                Y.LOG.TEMP<1,4> = Y.CATEGORY
                Y.LOG.TEMP<1,5> = Y.LOAN.DESC
                Y.LOG.TEMP<1,6> = Y.DRAWDOWN.AMOUNT
                Y.LOG.TEMP<1,7> = Y.AMOUNT
                Y.LOG.TEMP<1,8> = Y.VALUE.DATE
                Y.LOG.TEMP<1,9> = Y.FIN.MAT.DATE
                Y.LOG.TEMP<1,10> = Y.INTEREST.RATE
                Y.LOG.TEMP<1,11> = Y.MIS.ACCT.OFFICER
                Y.LOG.TEMP<1,12> = R.STMT<AC.STE.AMOUNT.FCY>
                Y.LOG.TEMP<1,13> = R.STMT<AC.STE.AMOUNT.LCY>
                Y.LOG.TEMP<1,14> = DATE.VALEUR.OP
                Y.LOG.TEMP<1,15> = Y.TXN.CODE


                CHANGE @VM TO ';' IN Y.LOG.TEMP
                CHANGE '.' TO ',' IN Y.LOG.TEMP

                Y.LOG.LINE =  Y.LOG.TEMP
                WRITESEQ Y.LOG.LINE ON F.OUTFILE ELSE CRT "Unable de write out"
                    Y.LOG.LINE = ''
                    Y.LOG.TEMP = ''

                
            NEXT STMT.COUNT
        
        REPEAT

    NEXT LD.SEQUENCE


RETURN

PREPARE.CONDITION:

    IF REF.LD NE "" THEN
        Y.CONDITION=" AND @ID EQ ":REF.LD
    END

    IF ID.CLIENT NE "" THEN
        Y.CONDITION:=" AND CUSTOMER.ID EQ ":ID.CLIENT

    END

    IF LOAN.TYPE NE "" THEN
        Y.CONDITION:=" AND LOAN.TYPE EQ ":LOAN.TYPE
    END

    IF AGENCE NE "" THEN
        Y.CONDITION:=" AND MIS.ACCT.OFFICER EQ ":AGENCE
    END


    Y.CONDITION:=" AND CURRENCY NE TND "


    IF Y.CONDITION NE "" THEN
        Y.CONDITION=Y.CONDITION[5,200]
        Y.CONDITION=" WITH ":Y.CONDITION
    END

RETURN

END
