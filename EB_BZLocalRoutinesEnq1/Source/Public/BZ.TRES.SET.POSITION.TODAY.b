*-----------------------------------------------------------------------------
* <Rating>0</Rating>
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE BZ.TRES.SET.POSITION.TODAY
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3
*-------------------------------------------------------
*MODIFICATION HISTORY:
*ZIT-UPG-R13-R19-F.READ TO CACHE.READ;GET.LOC.REF TO MULTI.GET.LOC.REF;INITIALISED VARIABLES;FM TO @FM
*				-ADDED JOURNAL.UPDATE
*-------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ENQUIRY
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.FX.PARAMETERS
    $INSERT I_F.BZ.POS.MVMT.TODAY


    GOSUB INIT
    GOSUB OPEN.FILES
    GOSUB PROCESS


INIT:

* $INSERT I_EQUATE - Not Used anymore;.FX.PARAMETERS"
    F.FX.PARAM = ""
	R.FX.RARAM=""
	E.FX.PARAM=""
	
    FN.POS = "F.BZ.POS.MVMT.TODAY"
    F.POS = ""

    K.FX.PARAM = "FX.PARAMETERS"

*ZIT-UPG-R13-R19 S
*    CALL GET.LOC.REF("FX.PARAMETERS","MNT.FOND",POS.MNT)
		Y.APP='FX.PARAMETERS'
		Y.FIELD='MNT.FOND'
		Y.POS=''
		CALL MULTI.GET.LOC.REF(Y.APP,Y.FIELD,Y.POS)
		POS.MNT=Y.POS<1EB.SystemTables.getVFunction()-UPG-R13-R19 FT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatus.READ(FN.FX.PARAM,K.FX.PARAM,R.FX.PARAM,F.FX.PFT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatus
	CALL CACHE.READ(FN.FX.PARAM,K.FX.PARAM,R.FX.PARAM,E.FX.PARAM)
    IF K.FX.PARAM THEN
        Y.MNT.FOND.PROPORE = R.FX.PARAM<FX.P.LOCAL.REF,POS.MNT>
    END


    RETURN

OPEN.FILES:

*    CALL OPF(FN.FX.PARAM,F.FX.PARAM)  ;*COMMENTING CALL OPF AS F.READ IS REPLACED WITH CACHE READ
    CALL OPF(FN.POS,F.POS)

    RETURN

PROCESS:

    CALL BZ.GET.POS.CHANGE.TODAY.NEW(TABLEAU)

    NBRE.DEVISE = DCOUNT(TABLEAU,@FM)

    FOR COMPTEUR.DVS = 1 TO NBRE.DEVISE

        RECORD.TMP = TABLEAU<COMPTEUR.DVS>

        YEB.DataAccess.OpfVISE = FIELD(RECORD.TMP,"*",1)
        YEB.DataAccess.OpfENNING.BALANCE = FIELD(RECORD.TMP,"*",2)
        Y.MVMT.SUM = FIELD(RECORD.TMP,"*",3)
        Y.ONLINE.BALANCE.SUM = FIELD(RECORD.TMP,"*",4)
        Y.COUS.REVAL.HIS = FIELD(RECORD.TMP,"*",5)
        Y.COUS.REVAL = FIELD(RECORD.TMP,"*",6)
        Y.RESULT.REB.SystemTables.getRNew(FT.AdhocChargeRequests.AcChargeRequest.ChgRelatedRefMP,"*",7)
        Y.SOMME.MVMT.ACHAT.RST  = FIELD(RECORD.TMP,"*",8)
        YEB.DataAccess.FRead.MVMT.VENTE.RST = FIELD(RECORD.TMP,"*",9)
        Y.SOMME.MVMT.ACHAT.LCY  = FIELD(RECORD.TMP,"*",10)
        Y.SOMME.MVMT.VENTE.LCY = FIELD(RECORD.TMP,"*",11)
        SOLDE.HIST  = FIELD(RECORD.TMP,"*",12)
        SOLDE.HIST.LCY = FIEEB.BZLocalTable1.BzCoffreLoyer.BzCoffreLoyerRefLoyer13)
        Y.OPENNING.BALANCE.LCY = FIELD(RECORD.TMP,"*",14)
        Y.ONEB.SystemTables.setE(FIELD(RECORD.TMP,"*",15))
        Y.COUS.REVAL.VEI = FIELD(RECORD.TMP,"*",16)
        Y.RANK = COMEB.BZLocalTable1.BzCoffreLoyer.BzCoffreLoyerRefLoyer Y.FP = ABS(Y.ONLINE.BALANCE.SUM.LCY / Y.MNT.FOND.PROPORE) * 100
        Y.FP = FMEB.DataAccess.FWrite"R4")

        GOSUB UPDATE.POSITION

    NEXTEB.SystemTables.setAf()*-----------------------------------------------------------------------------
* <Rating>0</Rating>
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE BZ.TRES.SET.POSITION.TODAY
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3
*-------------------------------------------------------
*MODIFICATION HISTORY:
*ZIT-UPG-R13-R19-F.READ TO CACHE.READ;GET.LOC.REF TO MULTI.GET.LOC.REF;INITIALISED VARIABLES;FM TO @FM
*				-ADDED JOURNAL.UPDATE
*-------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ENQUIRY
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.FX.PARAMETERS
    $INSERT I_F.BZ.POS.MVMT.TODAY


    GOSUB INIT
    GOSUB OPEN.FILES
    GOSUB PROCESS


INIT:

    FN.FX.PARAM = "F.FX.PARAMETERS"
    F.FX.PARAM = ""
	R.FX.RARAM=""
	E.FX.PARAM=""
	
    FN.POS = "F.BZ.POS.MVMT.TODAY"
    F.POS = ""

    K.FX.PARAM = "FX.PARAMETERS"

*ZIT-UPG-R13-R19 S
*    CALL GET.LOC.REF("FX.PARAMETERS","MNT.FOND",POS.MNT)
		Y.APP='FX.PARAMETERS'
		Y.FIELD='MNT.FOND'
		Y.POS=''
		CALL MULTI.GET.LOC.REF(Y.APP,Y.FIELD,Y.POS)
		POS.MNT=Y.POS<1,1>	
*ZIT-UPG-R13-R19 E 

*    CALL F.READ(FN.FX.PARAM,K.FX.PARAM,R.FX.PARAM,F.FX.PARAM,E.FX.PARAM)
	CALL CACHE.READ(FN.FX.PARAM,K.FX.PARAM,R.FX.PARAM,E.FX.PARAM)
    IF K.FX.PARAM THEN
        Y.MNT.FOND.PROPORE = R.FX.PARAM<FX.P.LOCAL.REF,POS.MNT>
    END


    RETURN

OPEN.FILES:

*    CALL OPF(FN.FX.PARAM,F.FX.PARAM)  ;*COMMENTING CALL OPF AS F.READ IS REPLACED WITH CACHE READ
    CALL OPF(FN.POS,F.POS)

    RETURN

PROCESS:

    CALL BZ.GET.POS.CHANGE.TODAY.NEW(TABLEAU)

    NBRE.DEVISE = DCOUNT(TABLEAU,@FM)

    FOR COMPTEUR.DVS = 1 TO NBRE.DEVISE

        RECORD.TMP = TABLEAU<COMPTEUR.DVS>

        Y.DEVISE = FIELD(RECORD.TMP,"*",1)
        Y.OPENNING.BALANCE = FIELD(RECORD.TMP,"*",2)
        Y.MVMT.SUM = FIELD(RECORD.TMP,"*",3)
        Y.ONLINE.BALANCE.SUM = FIELD(RECORD.TMP,"*",4)
        Y.COUS.REVAL.HIS = FIELD(RECORD.TMP,"*",5)
        Y.COUS.REVAL = FIELD(RECORD.TMP,"*",6)
        Y.RESULT.REVAL = FIELD(RECORD.TMP,"*",7)
        Y.SOMME.MVMT.ACHAT.RST  = FIELD(RECORD.TMP,"*",8)
        Y.SOMME.MVMT.VENTE.RST = FIELD(RECORD.TMP,"*",9)
        Y.SOMME.MVMT.ACHAT.LCY  = FIELD(RECORD.TMP,"*",10)
        Y.SOMME.MVMT.VENTE.LCY = FIELD(RECORD.TMP,"*",11)
        SOLDE.HIST  = FIELD(RECORD.TMP,"*",12)
        SOLDE.HIST.LCY = FIELD(RECORD.TMP,"*",13)
        Y.OPENNING.BALANCE.LCY = FIELD(RECORD.TMP,"*",14)
        Y.ONLINE.BALANCE.SUM.LCY = FIELD(RECORD.TMP,"*",15)
        Y.COUS.REVAL.VEI = FIELD(RECORD.TMP,"*",16)
        Y.RANK = COMPTEUR.DVS
        Y.FP = ABS(Y.ONLINE.BALANCE.SUM.LCY / Y.MNT.FOND.PROPORE) * 100
        Y.FP = FMT(Y.FP,"R4")

        GOSUB UPDATE.POSITION

    NEXT COFT.AdhocChargeRequests.AcChargeRequest.ChgRelatedRefIF NOEB.SystemTables.setE()*-----------------------------------------------------------------------------
* <Rating>0</Rating>
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE BZ.TRES.SET.POSITION.TODAY
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3
*-------------------------------------------------------
*MODIFICATION HISTORY:
*ZIT-UPG-R13-R19-F.READ TO CACHE.READ;GET.LOC.REF TO MULTI.GET.LOC.REF;INITIALISED VARIABLES;FM TO @FM
*				-ADDED JOURNAL.UPDATE
*-------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ENQUIRY
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.FX.PARAMETERS
    $INSERT I_F.BZ.POS.MVMT.TODAY


    GOSUB INIT
    GOSUB OPEN.FILES
    GOSUB PROCESS


INIT:

    FN.FX.PARAM = "F.FX.PARAMETERS"
    F.FX.PARAM = ""
	R.FX.RARAM=""
	E.FX.PARAM=""
	
    FN.POS = "F.BZ.POS.MVMT.TODAY"
    F.POS = ""

    K.FX.PARAM = "FX.PARAMETERS"

*ZIT-UPG-R13-R19 S
*    CALL GET.LOC.REF("FX.PARAMETERS","MNT.FOND",POS.MNT)
		Y.APP='FX.PARAMETERS'
		Y.FIELD='MNT.FOND'
		Y.POS=''
		CALL MULTI.GET.LOC.REF(Y.APP,Y.FIELD,Y.POS)
		POS.MNT=Y.POS<1,1>	
*ZIT-UPG-R13-R19 E 

*    CALL F.READ(FN.FX.PARAM,K.FX.PARAM,R.FX.PARAM,F.FX.PARAM,E.FX.PARAM)
	CALL CACHE.READ(FN.FX.PARAM,K.FX.PARAM,R.FX.PARAM,E.FX.PARAM)
    IF K.FX.PARAM THEN
        Y.MNT.FOND.PROPORE = R.FX.PARAM<FX.P.LOCAL.REF,POS.MNT>
    END


    RETURN

OPEN.FILES:

*    CALL OPF(FN.FX.PARAM,F.FX.PARAM)  ;*COMMENTING CALL OPF AS F.READ IS REPLACED WITH CACHE READ
    CALL OPF(FN.POS,F.POS)

    RETURN

PROCESS:

    CALL BZ.GET.POS.CHANGE.TODAY.NEW(TABLEAU)

    NBRE.DEVISE = DCOUNT(TABLEAU,@FM)

    FOR COMPTEUR.DVS = 1 TO NBRE.DEVISE

        RECORD.TMP = TABLEAU<COMPTEUR.DVS>

        Y.DEVISE = FIELD(RECORD.TMP,"*",1)
        Y.OPENNING.BALANCE = FIELD(RECORD.TMP,"*",2)
        Y.MVMT.SUM = FIELD(RECORD.TMP,"*",3)
        Y.ONLINE.BALANCE.SUM = FIELD(RECORD.TMP,"*",4)
        Y.COUS.REVAL.HIS = FIELD(RECORD.TMP,"*",5)
        Y.COUS.REVAL = FIELD(RECORD.TMP,"*",6)
        Y.RESULT.REVAL = FIELD(RECORD.TMP,"*",7)
        Y.SOMME.MVMT.ACHAT.RST  = FIELD(RECORD.TMP,"*",8)
        Y.SOMME.MVMT.VENTE.RST = FIELD(RECORD.TMP,"*",9)
        Y.SOMME.MVMT.ACHAT.LCY  = FIELD(RECORD.TMP,"*",10)
        Y.SOMME.MVMT.VENTE.LCY = FIELD(RECORD.TMP,"*",11)
        SOLDE.HIST  = FIELD(RECORD.TMP,"*",12)
        SOLDE.HIST.LCY = FIELD(RECORD.TMP,"*",13)
        Y.OPENNING.BALANCE.LCY = FIELD(RECORD.TMP,"*",14)
        Y.ONLINE.BALANCE.SUM.LCY = FIELD(RECORD.TMP,"*",15)
        Y.COUS.REVAL.VEI = FIELD(RECORD.TMP,"*",16)
        Y.RANK = COMPTEUR.DVS
        Y.FP = ABS(Y.ONLINE.BALANCE.SUM.LCY / Y.MNT.FOND.PROPORE) * 100
        Y.FP = FMT(Y.FP,"R4")

        GOSUB UPDATE.POSITION

    NEXT COMPTEUR.DVS

	IF NOT(PGM.VERSION) AND NOT(RUNNING.UNDER.BATCH) THEN
	CALL JOURNAL.UPDATE('')
	END

    RETURN

UPDATE.POSITION:
    IF Y.DEVISE THEN
        DONNE.REC<POS.DEVISE> = Y.DEVISE
        DONNE.REC<POS.DATE.POSITION> = TODAY
        DONNE.REC<POS.OPEN.BALANCE> = Y.OPENNING.BALANCE
        DONNE.REC<POS.REVAL.VEILLE> = Y.COUS.REVAL.VEI
        DONNE.REC<POS.OPEN.BALANCE.LCY> = Y.OPENNING.BALANCE.LCY
        DONNE.REC<POS.ACHAT> = Y.SOMME.MVMT.ACHAT.RST
        DONNE.REC<POS.ACHAT.LCY> = Y.SOMME.MVMT.ACHAT.LCY
        DONNE.REC<POS.VENTE> = Y.SOMME.MVMT.VENTE.RST
        DONNE.REC<POS.VENTE.LCY> = Y.SOMME.MVMT.VENTE.LCY
        DONNE.REC<POS.TXN.EOD> = 0
        DONNE.REC<POS.TXN.EOD.LCY> = 0
        DONNE.REC<POS.POSITION.FINAL> = Y.ONLINE.BALANCE.SUM
        DONNE.REC<POS.REVAL> = Y.COUS.REVAL
        DONNE.REC<POS.POSITION.FINAL.LCY> = Y.ONLINE.BALANCE.SUM.LCY
        DONNE.REC<POS.RESULTAT> = Y.RESULT.REVAL
        DONNE.REC<POS.POUR.FP> = Y.FP
        DONNE.REC<POS.RANK> = Y.RANK
        ID.POS = Y.DEVISE:".":TODAY

        CALL F.WRITE(FN.POS,ID.POS,DONNE.REC)

    END
    RETURN

END
