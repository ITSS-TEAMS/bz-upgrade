*-----------------------------------------------------------------------------
* <Rating>0</Rating>
* Modification History :  
*ZIT-UPG-R13-R19     :  No Changes.
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE BZ.CONV.FIN.DEVISE.COMM
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ENQUIRY
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.LMM.SCHEDULE.DATES
    $INSERT I_F.DATES
    $INSERT I_F.COMPANY
    $INSERT I_F.LMM.SCHEDULES.PAST
    $INSERT I_F.LMM.SCHEDULES
    $INSERT I_F.LD.LOANS.AND.DEPOSITS
    $INSERT I_F.PERIODIC.INTEREST
    $INSERT I_F.BASIC.RATE.TEXT
    $INSERT I_F.LMM.ACCOUNT.BALANCES
    $INSERT I_LD.ENQ.COMMON
    $INSERT I_F.PD.PAYMENT.DUE
    $INSERT I_LD.SCH.LIST
    * $INSERT I_COMMON - Not Used anymore;ENCY
    * $INSERT I_EQUATE - Not Used anymore;OMER
    $INSERT I_F.ACCOUNT


    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''


    FN.LD.LOANS.AND.DEPOSITS = 'F.LD.LOANS.AND.DEPOSITS'
    F.LD.LOANS.AND.DEPOSITS = ''

    FN.LD.LOANS.AND.DEPOSITS.NAU = 'F.LD.LOANS.AND.DEPOSITS$NAU'
    F.LD.LOANS.AND.DEPOSITS.NAU = ''

    CALL OPF(FN.LD.LOANS.AND.DEPOSITS,F.LD.LOANS.AND.DEPOSITS)
    CALL OPF(FN.LD.LOANS.AND.DEPOSITS.NAU,F.LD.LOANS.AND.DEPOSITS.NAU)
    CALLEB.SystemTables.getVFunction()COUNT,F.ACCOUNT)

**********

    REFFT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatus,2>
    REF.LD = FIELD(REF.LD," ",3)

*****FT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatusANS.AND.DEPOSITS = REF.LD

********************

    CALL F.READ(FN.LD.LOANS.AND.DEPOSITS,K.LD.LOANS.AND.DEPOSITS,R.LD.LOANS.AND.DEPOSITS,F.LD.LOANS.AND.DEPOSITS,E.LD.LOANS.AND.DEPOSITS)

    IF R.LD.LOANS.AND.DEPOSITS EQ '' THEN

        CALL F.READ(FN.LD.LOANS.AND.DEPOSITS.NAU,K.LD.LOANS.AND.DEPOSITS,R.LD.LOANS.AND.DEPOSITS,F.LD.LOANS.AND.DEPOSITS.NAU,E.LD.LOANS.AND.DEPOSITS)

    END

    Y.DEVISE.CONTRAT = R.LD.LOANS.AND.DEPOSITS<LD.CURRENCY>
    Y.COMPTE= R.LD.LOANS.AND.DEPOSITS<LD.PRIN.LIQ.ACCT>

    CALL F.READ(FN.ACCOUNT,Y.COMPTE,R.ACCOUNT,F.ACCOUNT,ERR)

    IF R.ACCOUNT NE '' THEN
        Y.ACCT.CCY.COMPTE = R.ACCOUNT<AC.CURRENCY>
    END


    IF EB.DataAccess.OpfB.DataAccess.OpfISE.CONTRAT NE Y.ACCT.CCY.COMPTE THEN

        COMMISSION.CONV = O.DATA

        Y.MONTANT.CHARGE.CALC = COMMISSION.CONV
        CURRENCY.MEB.SystemTables.getRNew()FT.AdhocChargeRequests.AcChargeRequest.ChgRelatedRef 0 ; BASE.CCY = ""; EXCH.RATE = "" ; LCL.AMT = 0
        CALL EXCHRATE(CURRENCY.MARKET, Y.ACCT.CCY.COMPTE,Y.MONTANT.CHARGE.CALC, Y.DEVISE.CONTRAT, CHG.AMT, BASE.CCY, EXCH.RATE, "", LCL.AMT, "")

       EB.DataAccess.FReadA = CHG.AMT

        CALL EB.ROUND.AMOUNT(Y.DEVISE.CONTRAT,O.DATA,"","")


    END

 EB.SystemTabEB.BZLocalTable1.BzCoffreLoyer.BzCoffreLoyerRefLoyer----------------------------------------------------------------------
* <Rating>0</Rating>
* Modification History :  
*ZIT-UPG-R13-R19     :  No Changes.
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE BZ.CONV.FIN.DEVISE.COMM
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ENQUIRY
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.LMM.SCHEDULE.DATES
    $INSERT I_F.DATES
    $INSERT I_F.COMPANY
    $INSERT I_F.LMM.SCHEDULES.PAST
    $INSERT I_F.LMM.SCHEDULES
    $INSERT I_F.LD.LOANS.AND.DEPOSITS
    $INSERT I_F.PERIODIC.INTEREST
    $INSERT I_F.BASIC.RATE.TEXT
    $INSERT I_F.LMM.ACCOUNT.BALANCES
    $INSERT I_LD.ENQ.COMMON
    $INSERT I_F.PD.PAYMENT.DUE
    $INSERT I_LD.SCH.LIST
    $INSERT I_F.CURRENCY
    $INSERT I_F.CUSTOMER
    $INSERT I_F.ACCOUNT


    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''


    FN.LD.LOANS.AND.DEPOSITS = 'F.LD.LOANS.AND.DEPOSITS'
    F.LD.LOANS.AND.DEPOSITS = ''

    FN.LD.LOANS.AND.DEPOSITS.NAU = 'F.LD.LOANS.AND.DEPOSITS$NAU'
    F.LD.LOANS.AND.DEPOSITS.NAU = ''

    CALL OPF(FN.LD.LOANS.AND.DEPOSITS,F.LD.LOANS.AND.DEPOSITS)
    CALL OPF(FN.LD.LOANS.AND.DEPOSITS.NAU,F.LD.LOANS.AND.DEPOSITS.NAU)
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

**********

    REF.LD = R.RECORD<35,2>
    REF.LD = FIELD(REF.LD," ",3)

*********
    K.LD.LOANS.AND.DEPOSITS = REF.LD

********************

    CALL F.READ(FN.LD.LOANS.AND.DEPOSITS,K.LD.LOANS.AND.DEPOSITS,R.LD.LOANS.AND.DEPOSITS,F.LD.LOANS.AND.DEPOSITS,E.LD.LOANS.AND.DEPOSITS)

    IF R.LD.LOANS.AND.DEPOSITS EQ '' THEN

        CALL F.READ(FN.LD.LOANS.AND.DEPOSITS.NAU,K.LD.LOANS.AND.DEPOSITS,R.LD.LOANS.AND.DEPOSITS,F.LD.LOANS.AND.DEPOSITS.NAU,E.LD.LOANS.AND.DEPOSITS)

    END

    Y.DEVISE.CONTRAT = R.LD.LOANS.AND.DEPOSITS<LD.CURRENCY>
    Y.COMPTE= R.LD.LOANS.AND.DEPOSITS<LD.PRIN.LIQ.ACCT>

    CALL F.READ(FN.ACCOUNT,Y.COMPTE,R.ACCOUNT,F.ACCOUNT,ERR)

    IF R.ACCOUNT NE '' THEN
        Y.ACCT.CCY.COMPTE = R.ACCOUNT<AC.CURRENCY>
    END


    IF Y.DEVISE.CONTRAT NE Y.ACCT.CCY.COMPTE THEN

        COMMISSION.CONV = O.DATA

        Y.MONTANT.CHARGE.CALC = COMMISSION.CONV
        CURRENCY.MARKET = 1 ; CHG.AMT = 0 ; BASE.CCY = ""; EXCH.RATE = "" ; LCL.AMT = 0
        CALL EXCHRATE(CURRENCY.MARKET, Y.ACCT.CCY.COMPTE,Y.MONTANT.CHARGE.CALC, Y.DEVISE.CONTRAT, CHG.AMT, BASE.CCY, EXCH.RATE, "", LCL.AMT, "")

        O.DATA = CHG.AMT

        CALL EB.ROUND.AMOUNT(Y.DEVISE.CONTRAT,O.DATA,"","")


    END

    RETURN
END
