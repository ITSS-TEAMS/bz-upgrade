*-----------------------------------------------------------------------------
* <Rating>-7</Rating>
*-----------------------------------------------------------------------------
*Modification History:
*-----------------------------------------------------------------------------
*ZIT-UPG-R09-R13  : INCLUDE GLOBUS.BP to $INCLUDE ../T24_BP
*                   INCLUDE BP to $INCLUDE BZDEV.BP
*ZIT-UPG-R13-R19  : Updated JOURNAL.UPDATE condition with version/batch filter.
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE  BZ.DESK.CALC.POS.REVAL
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3

*ZIT-UPG-R09-R13/S
*    INCLUDE GLOBUS.BP I_COMMON
*    INCLUDE GLOBUS.BP I_EQUATE
*    INCLUDE GLOBUS.BP I_ENQUIRY.COMMON
*    INCLUDE BP I_F.BZ.DESK.COURS.PERIOD
*    INCLUDE BP I_F.BZ.DESK.POSITION.PERIOD
*    INCLUDE GLOBUS.BP I_F.CURRENCY

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.CURRENCY

* $INSERT I_EQUATE - Not Used anymore;COURS.PERIOD
* $INSERT I_ENQUIRY.COMMON - Not Used anymore;.PERIOD


*ZIT-UPG-R09-R13/E
    FN.DESK.COURS.PRD="F.BZ.DESK.COURS.PERIOD"
    F.DESK.COURS.PRD=""
    R.DESK.COURS.PRD=''
    ERR.DESK.COURS.PRD=''

    FN.DESK.POS.PRD="F.BZ.DESK.POSITION.PERIOD"
    F.DESK.POS.PRD=""
    R.DESK.POS.PRD=''
    ERR.DESK.POS.PRD=''

    FN.CUR="F.CURRENCY"
    F.CUEB.SystemTables.getVFunction()REC.CUR=""
    ERR.CUR=""

    CALL OPFT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatus,F.DESK.POS.PRD)
tmp.R.NEW.FT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatusRD = EB.SystemTables.getRNew(FT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatusRD)
    CALL OPF(FN.DESK.Ctmp.R.NEW.FT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatusRD
EB.SystemTables.setRNew(FT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatusRD, tmp.R.NEW.FT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatusRD)
    CALL OPF(FN.CUR,F.CUR)


    V.DEVISE=FIELD(O.DATA,"*",1)
    V.DEV.MNT=FIELD(O.DATA,"*",2)
    V.PERIODE=FIELD(O.DATA,"*",3)
    V.AGENCE = FIELD(O.DATA,"*",4)
    V.MNT.TND=FIELD(O.DATA,"*",5)
    V.DEALER.DESK=FIELD(O.DATA,"*",6)

    V.MOIS=V.PERIODE[5,6]
    V.ANNEE=V.PERIODE[1,4]


    IF V.MOIS EQ '01' THEN
        V.ANNEE= V.ANNEE - 1
        V.ANNEE=FMT(V.ANNEE, "R%4")
        V.MOIS="12"
        V.PERIODE.LAST=V.ANNEE:V.MOIS
    END ELSE

        V.MOIS= V.MOIS - 1
        V.MOIS=FMT(V.MOIS, "R%2")
        VEB.DataAccess.OpfRIODE.LAST=V.ANNEE:V.MOIS

    ENDEB.DataAccess.Opf*** RECUPERER COURS REVAL DE LA TABLE COURS PERIOD*******
    V.ID.PERIOD=V.DEVISE:"-":V.PERIODE
    CALL F.READ(FN.DESK.COURS.PRD,V.ID.PERIOD,R.DESK.COURS.PRD,F.DESK.COURS.PRD,ERR.DESK.COURS.PRD)
    IF R.DESK.COUREB.SystemTables.getRNew()FT.AdhocChargeRequests.AcChargeRequest.ChgRelatedRef     O.DATA = "COURS REVAL INDISPONIBLE"
        REB.DataAccess.FRead
    END
    COURS.REVAL=R.DESK.COURS.PRD<DESK.CRS.PRD.COURS.REVAL>
**** FIN RECUPERER COURS REVAL DE LA TABLE COURS PERIOD*****

****************CALCUL POSEB.BZLocalTable1.BzCoffreLoyer.BzCoffreLoyerRefLoyer********************
    V.ID.PEREB.SystemTables.setE(V.DEVISE: "-" : V.PERIODE.LAST : "-" : V.AGENCE : "-" : V.DEALER.DESK)
    CALL F.READ(FN.DESK.POS.PRD,V.ID.PERIOD,R.DESK.POS.PRD,F.DESK.POS.PRD,ERR.DESK.POS.PRD)
    V.POSITION.REVALEB.BZLocalTable1.BzCoffreLoyer.BzCoffreLoyerRefLoyer.PRD<EB.SystemTables.getIdNew()P.POSITION.REVALUE>
*V.POS.DINARS.INIT=R.DESK.POS.PRD<DESK.PP.POSITION.DINARS>
    V.POS.DINARS.EB.DataAccess.FWritePOSITION.REVALUE.LAST
    V.POS.DEV.INIT=R.DESK.POS.PRD<DESK.PP.POSITION.DEVISE>

***POSITION DEVISE FINALE = TOTAL MOUVEMENT DEVISE+POSITION DEVISE INITIALE***
    NOUVEB.SystemTables.setAf()*-----------------------------------------------------------------------------
* <Rating>-7</Rating>
*-----------------------------------------------------------------------------
*Modification History:
*-----------------------------------------------------------------------------
*ZIT-UPG-R09-R13  : INCLUDE GLOBUS.BP to $INCLUDE ../T24_BP
*                   INCLUDE BP to $INCLUDE BZDEV.BP
*ZIT-UPG-R13-R19  : Updated JOURNAL.UPDATE condition with version/batch filter.
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE  BZ.DESK.CALC.POS.REVAL
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3

*ZIT-UPG-R09-R13/S
*    INCLUDE GLOBUS.BP I_COMMON
*    INCLUDE GLOBUS.BP I_EQUATE
*    INCLUDE GLOBUS.BP I_ENQUIRY.COMMON
*    INCLUDE BP I_F.BZ.DESK.COURS.PERIOD
*    INCLUDE BP I_F.BZ.DESK.POSITION.PERIOD
*    INCLUDE GLOBUS.BP I_F.CURRENCY

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.CURRENCY

$INSERT I_F.BZ.DESK.COURS.PERIOD
$INSERT I_F.BZ.DESK.POSITION.PERIOD


*ZIT-UPG-R09-R13/E
    FN.DESK.COURS.PRD="F.BZ.DESK.COURS.PERIOD"
    F.DESK.COURS.PRD=""
    R.DESK.COURS.PRD=''
    ERR.DESK.COURS.PRD=''

    FN.DESK.POS.PRD="F.BZ.DESK.POSITION.PERIOD"
    F.DESK.POS.PRD=""
    R.DESK.POS.PRD=''
    ERR.DESK.POS.PRD=''

    FN.CUR="F.CURRENCY"
    F.CUR=""
    REC.CUR=""
    ERR.CUR=""

    CALL OPF(FN.DESK.POS.PRD,F.DESK.POS.PRD)
    CALL OPF(FN.DESK.COURS.PRD,F.DESK.COURS.PRD)
    CALL OPF(FN.CUR,F.CUR)


    V.DEVISE=FIELD(O.DATA,"*",1)
    V.DEV.MNT=FIELD(O.DATA,"*",2)
    V.PERIODE=FIELD(O.DATA,"*",3)
    V.AGENCE = FIELD(O.DATA,"*",4)
    V.MNT.TND=FIELD(O.DATA,"*",5)
    V.DEALER.DESK=FIELD(O.DATA,"*",6)

    V.MOIS=V.PERIODE[5,6]
    V.ANNEE=V.PERIODE[1,4]


    IF V.MOIS EQ '01' THEN
        V.ANNEE= V.ANNEE - 1
        V.ANNEE=FMT(V.ANNEE, "R%4")
        V.MOIS="12"
        V.PERIODE.LAST=V.ANNEE:V.MOIS
    END ELSE

        V.MOIS= V.MOIS - 1
        V.MOIS=FMT(V.MOIS, "R%2")
        V.PERIODE.LAST=V.ANNEE:V.MOIS

    END
**** RECUPERER COURS REVAL DE LA TABLE COURS PERIOD*******
    V.ID.PERIOD=V.DEVISE:"-":V.PERIODE
    CALL F.READ(FN.DESK.COURS.PRD,V.ID.PERIOD,R.DESK.COURS.PRD,F.DESK.COURS.PRD,ERR.DESK.COURS.PRD)
    IF R.DESK.COURS.PRD EQ '' THEN
        O.DATA = "COURS REVAL INDISPONIBLE"
        RETURN
    END
    COURS.REVAL=R.DESK.COURS.PRD<DESK.CRS.PRD.COURS.REVAL>
**** FIN RECUPERER COURS REVAL DE LA TABLE COURS PERIOD*****

****************CALCUL POSITION REVALUE*************************
    V.ID.PERIOD=V.DEVISE: "-" : V.PERIODE.LAST : "-" : V.AGENCE : "-" : V.DEALER.DESK
    CALL F.READ(FN.DESK.POS.PRD,V.ID.PERIOD,R.DESK.POS.PRD,F.DESK.POS.PRD,ERR.DESK.POS.PRD)
    V.POSITION.REVALUE.LAST=R.DESK.POS.PRD<DESK.PP.POSITION.REVALUE>
*V.POS.DINARS.INIT=R.DESK.POS.PRD<DESK.PP.POSITION.DINARS>
    V.POS.DINARS.INIT=V.POSITION.REVALUE.LAST
    V.POS.DEV.INIT=R.DESK.POS.PRD<DESK.PP.POSITION.DEVISE>

***POSITION DEVISE FINALE = TOTAL MOUVEMENT DEVISE+POSITION DEVISE INITIALE***
    NOUV.POFT.AdhocChargeRequests.AcChargeRequest.ChgRelatedRef.POS.DEV.INIT
    NOUVEB.SystemTables.setE(DROUND(NOUV.POS,2))
****

    BEGIN CASE

    CASE V.DEVISE EQ 'AED' OR V.DEVISE EQ 'CHF' OR V.DEVISE EQ 'DZD' OR V.DEVISE EQ 'MAD' OR V.DEVISE EQ 'QAR' OR V.DEVISE EQ 'SAR' OR V.DEVISE EQ 'SEK'

        CALL F.READ(FN.CUR,V.DEVISE,REC.CUR,F.CUR,ERR.CUR)
        V.QUOTATION.CUR=REC.CUR<EB.CUR.QUOTATION.CODE>
        V.COURS.REVAL.QUOT=PWR(10,V.QUOTATION.CUR)
        V.NOUV.POS.REVAL= NOUV.POS*(COURS.REVAL/V.COURS.REVAL.QUOT)
        O.DATA = V.NOUV.POS.REVAL
        O.DATA=DROUND(O.DATA,3)
        V.POS.TND.FIN=V.POSITION.REVALUE.LAST+V.MNT.TND
        V.POS.TND.FIN=DROUND(V.POS.TND.FIN,3)


    CASE V.DEVISE EQ 'DKK' OR V.DEVISE EQ 'MRO' OR V.DEVISE EQ 'NOK'
        CALL F.READ(FN.CUR,V.DEVISE,REC.CUR,F.CUR,ERR.CUR)
        V.QUOTATION.CUR=REC.CUR<EB.CUR.QUOTATION.CODE>
        V.COURS.REVAL.QUOT=PWR(10,V.QUOTATION.CUR)
        V.NOUV.POS.REVAL= NOUV.POS*(COURS.REVAL/V.COURS.REVAL.QUOT)
        O.DATA = V.NOUV.POS.REVAL
        O.DATA=DROUND(O.DATA,3)

        V.POS.TND.FIN=V.POSITION.REVALUE.LAST+V.MNT.TND
        V.POS.TND.FIN=DROUND(V.POS.TND.FIN,3)

    CASE V.DEVISE EQ 'JPY'
        CALL F.READ(FN.CUR,V.DEVISE,REC.CUR,F.CUR,ERR.CUR)
        V.QUOTATION.CUR=REC.CUR<EB.CUR.QUOTATION.CODE>
        V.COURS.REVAL.QUOT=PWR(10,V.QUOTATION.CUR)
        V.NOUV.POS.REVAL= NOUV.POS*(COURS.REVAL/V.COURS.REVAL.QUOT)
        O.DATA = V.NOUV.POS.REVAL
        O.DATA=DROUND(O.DATA,3)

        V.POS.TND.FIN=V.POSITION.REVALUE.LAST+V.MNT.TND
        V.POS.TND.FIN=DROUND(V.POS.TND.FIN,3)

    CASE 1

        V.NOUV.POS.REVAL= NOUV.POS*COURS.REVAL
        O.DATA = V.NOUV.POS.REVAL
        O.DATA=DROUND(O.DATA,3)

        V.POS.TND.FIN=V.POSITION.REVALUE.LAST+V.MNT.TND
        V.POS.TND.FIN=DROUND(V.POS.TND.FIN,3)

    END CASE
*****************FIN CALCUL POSITION REVALUE**********************


*****METTRE A JOUR POSITION PERIODE COURANTE*******
*V.POS.DINARS.OUV=V.NOUV.POS.REVAL
*V.POS.DINARS.OUV=DROUND(V.POS.DINARS.OUV,3)

    V.ID=V.DEVISE:"-":V.PERIODE:"-": V.AGENCE :"-":V.DEALER.DESK
    CALL F.READ(FN.DESK.POS.PRD,V.ID,R.DESK.POS.PRD,F.DESK.POS.PRD,ERR.DESK.POS.PRD)

    R.DESK.POS.PRD<DESK.PP.DEVISE>=V.DEVISE
    R.DESK.POS.PRD<DESK.PP.AGENCE>=V.AGENCE
    R.DESK.POS.PRD<DESK.PP.PERIODE>=V.PERIODE
    R.DESK.POS.PRD<DESK.PP.POSITION.DEVISE>=NOUV.POS
    R.DESK.POS.PRD<DESK.PP.POSITION.REVALUE>=O.DATA
    R.DESK.POS.PRD<DESK.PP.POSITION.DINARS>=V.POS.TND.FIN
    R.DESK.POS.PRD<DESK.PP.POS.DEVISE.INIT>=V.POS.DEV.INIT
    R.DESK.POS.PRD<DESK.PP.POS.DINARS.INIT>=V.POS.DINARS.INIT
*R.DESK.POS.PRD<DESK.PP.RENTABILITE>=V.RENTABILITE
    R.DESK.POS.PRD<DESK.PP.COURS.REVAL>=COURS.REVAL
    R.DESK.POS.PRD<DESK.PP.TOT.MOUV.DEVISE>=V.DEV.MNT
    R.DESK.POS.PRD<DESK.PP.TOT.MOUV.DINARS>=V.MNT.TND
***************AJOUTE PAR FEHMI LE 15062016
    R.DESK.POS.PRD<DESK.PP.RESERVED.1>=V.DEALER.DESK
***************
    CALL F.WRITE(FN.DESK.POS.PRD,V.ID,R.DESK.POS.PRD)
    * CALL JOURNAL.UPDATE(V.ID)
	IF NOT(PGM.VERSION) AND NOT(RUNNING.UNDER.BATCH) THEN  ;* Tus Start  
	CALL JOURNAL.UPDATE('')  
	END     
	

*****FIN METTRE A JOUR POSITION PERIODE COURANTE*******
    RETURN
END
