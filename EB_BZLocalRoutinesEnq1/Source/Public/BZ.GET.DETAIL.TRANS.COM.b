*-----------------------------------------------------------------------------
* <Rating>-4</Rating>
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE BZ.GET.DETAIL.TRANS.COM(TABLEAU)
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3
*-----------------------------------------------------------------------------
* Modification History :                                                      
*ZIT-UPG-R09-R13  : $INSERT BP to $INCLUDE BZDEV.BP 
*ZIT_UPG_R13_TO_R19 : NO CHANGES                          
*-----------------------------------------------------------------------------

$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_ENQUIRY.COMMON
*ZIT-UPG-R09-R13/S
*$INSERT BP I_F.BZ.COMMERCANT.TRANS
*$INSERT BP I_F.BZ.COMMERCANT.TRANS.DETAIL
*$INSERT BP I_F.BZ.COMMERCANT.TRANS.STATUT
$INSERT I_F.BZ.COMMERCANT.TRANS          
$INSERT I_F.BZ.COMMERCANT.TRANS.DETAIL   
$INSERT I_F.BZ.COMMERCANT.TRANS.STATUT   
*ZIT-UPG-R09-R13/E


* $INSERT I_COMMON - Not Used anymore;ANS="F.BZ.COMMERCANT.TRANS"
* $INSERT I_EQUATE - Not Used anymore;NS=""

* $INSERT I_F.AC.CHARGE.REQUEST - Not Used anymore;.BZ.COMMERCANT.TRANS.STATUT"
    F.COMMERCANT.TRANS.STATUT=""

    CALL OPF(FN.COMMERCANT.TRANS,F.COMMERCANT.TRANS)
* $INSERT I_F.BZ.COFFRE.LOYER - Not Used anymore;S.STATUT,F.COMMERCANT.TRANS.STATUT)

    LOCATE "PORTEUR" IN D.FIELDS<1> SETTING PORTEUR.POS THEN
        PORTEUR = D.RANGE.AND.VALUE<PORTEUR.POS>
    END

    LOCATE "JOURNEE" IN D.FIELDS<1> SETTING JOURNEE.POS THEN
        JOURNEE = D.RANGE.AND.VALUE<JOURNEE.POS>
    END

    LOCAEB.SystemTables.getVFunction()CANT" IN D.FIEB.SystemTables.getVFunction()TTING COMMEREB.SystemTables.getRNew()PFT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatusCOMMERCANT = D.RANGE.AND.VALUE<COMMERCANT.POS>FT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatusCONDITION=""

    IF PORTEUR THEN
        CONDITION:=" AND PORTEUR EQ ":PORTEUR
    END

    IF JOURNEE THEN
        CONDITION:=" AND JOURNEE EQ ":JOURNEE
    END

    IF COMMERCANT THEN
        CONDITION:=" AND COMMERCANT EQ ":COMMERCANT
    END

    CONDITION=CONDITION[5,50]

    IF CONDITION THEN
        CMD= "SELECT ":FN.COMMERCANT.TRANS:" WITH ":CONDITION
    END ELSE
        CMD= "SELECT ":FN.COMMERCANT.TRANS
    END
CPS.COUNT =''
CPS.ERROR =''
    CALL EB.READLIST(CMD,CPS.IDS, '', CPS.COUNT, CPS.ERROR)

    IF CPEB.DataAccess.OpfDS NE "" THEN
        FEB.DataAccess.OpfCOUNTER = 1 TO CPS.COUNT
            REMOVE JOURNEE.ID FROM CPS.IDS SETTING CPS.POS
			COMERCANT.REC =''
			OFS.ERROR =''
			COMMERCANT.STATUT.REC='EB.SystemTables.getRNew()	FT.AdhocChargeRequests.AcChargeRequest.ChgRelatedRef=''
            CALL F.READ(FN.COMMERCANT.TRANS,JOURNEE.ID,COMERCANT.REC, F.COMMERCANT.TRANS, OFS.ERROR)
         EB.DataAccess.FReadL F.READ(FN.COMMERCANT.TRANS.STATUT,JOURNEE.ID, COMMERCANT.STATUT.REC,F.COMMERCANT.TRANS.STATUT, ERR.COMMERCANT)
            STATUT=COMMERCANT.STATUT.REC<COM.TRANS.STAT.STATUT>
            IF STATUT EQ 'CONFIRME' THEN
                TABLEAU<-1>=COMERCANT.REC
            END
        NEXEB.BZLocalTable1.BzCoffreLoyer.BzCoffreLoyerRefLoyer

 EB.SystemTables.setE()*-----------------------------------------------------------------------------
* <Rating>-4</Rating>
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE BZ.GET.DETAIL.TRANS.COM(TABLEAU)
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3
*-----------------------------------------------------------------------------
* Modification History :                                                      
*ZIT-UPG-R09-R13  : $INSERT BP to $INCLUDE BZDEV.BP 
*ZIT_UPG_R13_TO_R19 : NO CHANGES                          
*-----------------------------------------------------------------------------

$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_ENQUIRY.COMMON
*ZIT-UPG-R09-R13/S
*$INSERT BP I_F.BZ.COMMERCANT.TRANS
*$INSERT BP I_F.BZ.COMMERCANT.TRANS.DETAIL
*$INSERT BP I_F.BZ.COMMERCANT.TRANS.STATUT
$INSERT I_F.BZ.COMMERCANT.TRANS          
$INSERT I_F.BZ.COMMERCANT.TRANS.DETAIL   
$INSERT I_F.BZ.COMMERCANT.TRANS.STATUT   
*ZIT-UPG-R09-R13/E


    FN.COMMERCANT.TRANS="F.BZ.COMMERCANT.TRANS"
    F.COMMERCANT.TRANS=""

    FN.COMMERCANT.TRANS.STATUT="F.BZ.COMMERCANT.TRANS.STATUT"
    F.COMMERCANT.TRANS.STATUT=""

    CALL OPF(FN.COMMERCANT.TRANS,F.COMMERCANT.TRANS)
    CALL OPF(FN.COMMERCANT.TRANS.STATUT,F.COMMERCANT.TRANS.STATUT)

    LOCATE "PORTEUR" IN D.FIELDS<1> SETTING PORTEUR.POS THEN
        PORTEUR = D.RANGE.AND.VALUE<PORTEUR.POS>
    END

    LOCATE "JOURNEE" IN D.FIELDS<1> SETTING JOURNEE.POS THEN
        JOURNEE = D.RANGE.AND.VALUE<JOURNEE.POS>
    END

    LOCATE "COMMERCANT" IN D.FIELDS<1> SETTING COMMERCANT.POS THEN
        COMMERCANT = D.RANGE.AND.VALUE<COMMERCANT.POS>
    END

    CONDITION=""

    IF PORTEUR THEN
        CONDITION:=" AND PORTEUR EQ ":PORTEUR
    END

    IF JOURNEE THEN
        CONDITION:=" AND JOURNEE EQ ":JOURNEE
    END

    IF COMMERCANT THEN
        CONDITION:=" AND COMMERCANT EQ ":COMMERCANT
    END

    CONDITION=CONDITION[5,50]

    IF CONDITION THEN
        CMD= "SELECT ":FN.COMMERCANT.TRANS:" WITH ":CONDITION
    END ELSE
        CMD= "SELECT ":FN.COMMERCANT.TRANS
    END
CPS.COUNT =''
CPS.ERROR =''
    CALL EB.READLIST(CMD,CPS.IDS, '', CPS.COUNT, CPS.ERROR)

    IF CPS.IDS NE "" THEN
        FOR COUNTER = 1 TO CPS.COUNT
            REMOVE JOURNEE.ID FROM CPS.IDS SETTING CPS.POS
			COMERCANT.REC =''
			OFS.ERROR =''
			COMMERCANT.STATUT.REC=''
			ERR.COMMERCANT =''
            CALL F.READ(FN.COMMERCANT.TRANS,JOURNEE.ID,COMERCANT.REC, F.COMMERCANT.TRANS, OFS.ERROR)
            CALL F.READ(FN.COMMERCANT.TRANS.STATUT,JOURNEE.ID, COMMERCANT.STATUT.REC,F.COMMERCANT.TRANS.STATUT, ERR.COMMERCANT)
            STATUT=COMMERCANT.STATUT.REC<COM.TRANS.STAT.STATUT>
            IF STATUT EQ 'CONFIRME' THEN
                TABLEAU<-1>=COMERCANT.REC
            END
        NEXT COUNTER
    END

    RETURN

END
