*-----------------------------------------------------------------------------
* <Rating>-31</Rating>
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE NOFILE.BZ.MDP.DOC.EMIS.CHQ(TABLEAU)
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3

*Modification History:
*-----------------------------------------------------------------------------
*ZIT-UPG-R09-R13  : GLOBUS.BP TO ../T24_BP, $INSERT BP to $INCLUDE BZDEV.BP
*ZIT-UPG-R13-R19  : COMMENTED OPF,F.READ FOR USER APP;INITIALISED VARIABLES
*-----------------------------------------------------------------------------

*ZIT-UPG-R09-R13 / S
*    INCLUDE GLOBUS.BP I_COMMON
*    INCLUDE GLOBUS.BP I_EQUATE
*    INCLUDE GLOBUS.BP I_ENQUIRY.COMMON
*    INCLUDE BP    I_F.BZ.MDP.DOC.EMIS.CHQ
*    INCLUDE GLOBUS.BP I_F.ACCOUNT
*    INCLUDE GLOBUS.BP I_F.USER
$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_ENQUIRY.COMMON
$INSERT I_F.BZ.MDP.DOC.EMIS.CHQ
$INSERT I_F.ACCOUNT
$INSERT I_F.USER
* $INSERT I_EQUATE - Not Used anymore;

    GOSUB INITIALISATION
    GOSUB OPENFILES
    GOSUB PROCESS
    RETURN

INITIALISATION:

    V.STATUS.INTER = 4
    V.STATUS.INTRA = 2
    V.CODE.VALEUR = 81

*    FN.USER='F.USER'
*    F.USER=''
*    R.USER=''     ;*NOT NEEDED AS R.USER GIVES THE CURRENT USER INFO
*    ERREB.SystemTables.getVFunction()  FN.BZ.MDP.DOC.EMIS.CHQ='F.BZ.MDP.DOC.EMFT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatus.MDP.DOC.EMIS.CHQ=''
    R.CHEQUE=''
	BZ.MDPFT.AdhocChargeRequests.AcChargeRequest.ChgRecordStatusUE.ID=''

    FN.ACCOUNT='F.ACCOUNT'
    F.ACCOUNT=''
	R.ACCOUNT.REC=''
	ERR1=''

    RETURN

OPENFILES:

    CALL OPF(FN.BZ.MDP.DOC.EMIS.CHQ,F.BZ.MDP.DOC.EMIS.CHQ)
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    CALL OPF(FN.USER,F.USER)
    RETURN
PROCESS:

*    CALL F.READ (FN.USER,OPERATOR,R.USER,F.USER,ERR1)
    V.DEPART.CODE=R.USER<EB.USE.DEPARTMENT.CODE>

    DATE.LIMIT = TODAY
    DAYS.LIMIT = "-03W"
    CALL CDT('',DATE.LIMIT ,DAYS.LIMIT )
	SEB.DataAccess.OpfLIST=''
	TEB.DataAccess.OpfL.COUNT=''
	CHEQUE.ERROR=''
    CMD= "SELECT ":FN.BZ.MDP.DOC.EMIS.CHQ:" WITH (( CODE.DEST EQ 25 AND STATUT EQ ":V.STATUS.INTRA:" ) OR (  CODE.DEST NE 25 AND STATUT EQ ":V.STATUS.INTER:")) AND CODE.VALEUR EQ ":V.CODE.VALEUR:" AND DATE.DOC GE ":DATE.LIMIT
    CALL EB.READLIST(CMD, SEL.LIST, '', TOTAL.COUNT, CHEQUE.ERROR)
    FOR COMPTEUR=1 TO TOTAL.COUNT
        REMOVE CHEEB.SystemTables.getRNew()DFT.AdhocChargeRequests.AcChargeRequest.ChgRelatedRefSETTING POS
        CALL F.READ(FN.BZ.MDP.DOC.EMIS.CHQ,CHEQUE.ID,R.CHEQUE,F.BZ.MDP.DOC.EMIS.CHQ,BZ.MDP.ERR)

       EB.DataAccess.FRead.CPT=R.CHEQUE<DOC.EMI.NUM.CPT>
        CALL F.READ(FN.ACCOUNT,V.NUM.CPT,R.ACCOUNT.REC,F.ACCOUNT,ERR1)
        V.DEPT.ACCT.OFFICER = R.ACCOUNT.REC<AC.ACCOUNT.OFFICER>

        IF V.DEPT.ACCT.OFFEB.BZLocalTable1.BzCoffreLoyer.BzCoffreLoyerRefLoyerODE THEN
            EB.SystemTables.setE(R.CHEQUE<DOC.EMI.MNT.CHEQUE>)
            NUM.CHEQUE=R.CHEQUE<DOC.EMI.NUM.CHEQUE>
            RIB.TIREEB.BZLocalTable1.BzCoffreLoyer.BzCoffreLoyerRefLoyerI.RIBEB.SystemTables.getIdNew()R>
            CODE.DEST=R.CHEQUE<DOC.EMI.CODE.DEST>
            RIB.BEB.DataAccess.FWriteCHEQUE<DOC.EMI.RIB.BENEF>
            DATE.DOC=R.CHEQUE<DOC.EMI.DATE.DOC>
            MNT.PROVISION=R.CHEQUE<DOC.EMI.MNT.PROVISION>
            MOTIF.REJET=R.CHEQUE<DOC.EMI.MOTIF.REJET>
        EB.SystemTables.setAf()*-----------------------------------------------------------------------------
* <Rating>-31</Rating>
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE NOFILE.BZ.MDP.DOC.EMIS.CHQ(TABLEAU)
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3

*Modification History:
*-----------------------------------------------------------------------------
*ZIT-UPG-R09-R13  : GLOBUS.BP TO ../T24_BP, $INSERT BP to $INCLUDE BZDEV.BP
*ZIT-UPG-R13-R19  : COMMENTED OPF,F.READ FOR USER APP;INITIALISED VARIABLES
*-----------------------------------------------------------------------------

*ZIT-UPG-R09-R13 / S
*    INCLUDE GLOBUS.BP I_COMMON
*    INCLUDE GLOBUS.BP I_EQUATE
*    INCLUDE GLOBUS.BP I_ENQUIRY.COMMON
*    INCLUDE BP    I_F.BZ.MDP.DOC.EMIS.CHQ
*    INCLUDE GLOBUS.BP I_F.ACCOUNT
*    INCLUDE GLOBUS.BP I_F.USER
$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_ENQUIRY.COMMON
$INSERT I_F.BZ.MDP.DOC.EMIS.CHQ
$INSERT I_F.ACCOUNT
$INSERT I_F.USER
*ZIT-UPG-R09-R13 / E

    GOSUB INITIALISATION
    GOSUB OPENFILES
    GOSUB PROCESS
    RETURN

INITIALISATION:

    V.STATUS.INTER = 4
    V.STATUS.INTRA = 2
    V.CODE.VALEUR = 81

*    FN.USER='F.USER'
*    F.USER=''
*    R.USER=''     ;*NOT NEEDED AS R.USER GIVES THE CURRENT USER INFO
*    ERR1=''

    FN.BZ.MDP.DOC.EMIS.CHQ='F.BZ.MDP.DOC.EMIS.CHQ'
    F.BZ.MDP.DOC.EMIS.CHQ=''
    R.CHEQUE=''
	BZ.MDP.ERR=''
    CHEQUE.ID=''

    FN.ACCOUNT='F.ACCOUNT'
    F.ACCOUNT=''
	R.ACCOUNT.REC=''
	ERR1=''

    RETURN

OPENFILES:

    CALL OPF(FN.BZ.MDP.DOC.EMIS.CHQ,F.BZ.MDP.DOC.EMIS.CHQ)
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    CALL OPF(FN.USER,F.USER)
    RETURN
PROCESS:

*    CALL F.READ (FN.USER,OPERATOR,R.USER,F.USER,ERR1)
    V.DEPART.CODE=R.USER<EB.USE.DEPARTMENT.CODE>

    DATE.LIMIT = TODAY
    DAYS.LIMIT = "-03W"
    CALL CDT('',DATE.LIMIT ,DAYS.LIMIT )
	SEL.LIST=''
	TOTAL.COUNT=''
	CHEQUE.ERROR=''
    CMD= "SELECT ":FN.BZ.MDP.DOC.EMIS.CHQ:" WITH (( CODE.DEST EQ 25 AND STATUT EQ ":V.STATUS.INTRA:" ) OR (  CODE.DEST NE 25 AND STATUT EQ ":V.STATUS.INTER:")) AND CODE.VALEUR EQ ":V.CODE.VALEUR:" AND DATE.DOC GE ":DATE.LIMIT
    CALL EB.READLIST(CMD, SEL.LIST, '', TOTAL.COUNT, CHEQUE.ERROR)
    FOR COMPTEUR=1 TO TOTAL.COUNT
        REMOVE CHEQUE.ID FROM SEL.LIST SETTING POS
        CALL F.READ(FN.BZ.MDP.DOC.EMIS.CHQ,CHEQUE.ID,R.CHEQUE,F.BZ.MDP.DOC.EMIS.CHQ,BZ.MDP.ERR)

        V.NUM.CPT=R.CHEQUE<DOC.EMI.NUM.CPT>
        CALL F.READ(FN.ACCOUNT,V.NUM.CPT,R.ACCOUNT.REC,F.ACCOUNT,ERR1)
        V.DEPT.ACCT.OFFICER = R.ACCOUNT.REC<AC.ACCOUNT.OFFICER>

        IF V.DEPT.ACCT.OFFICER EQ V.DEPART.CODE THEN
            MNT.CHEQUE = R.CHEQUE<DOC.EMI.MNT.CHEQUE>
            NUM.CHEQUE=R.CHEQUE<DOC.EMI.NUM.CHEQUE>
            RIB.TIREUR=R.CHEQUE<DOC.EMI.RIB.TIREUR>
            CODE.DEST=R.CHEQUE<DOC.EMI.CODE.DEST>
            RIB.BENEF=R.CHEQUE<DOC.EMI.RIB.BENEF>
            DATE.DOC=R.CHEQUE<DOC.EMI.DATE.DOC>
            MNT.PROVISION=R.CHEQUE<DOC.EMI.MNT.PROVISION>
            MOTIF.REJET=R.CHEQUE<DOC.EMI.MOTIF.REJET>
           FT.AdhocChargeRequests.AcChargeRequest.ChgRelatedRefEQUE.ID:"*":MNT.CHEQUE:"*":NUM.CHEQUE:"*":RIB.TIREUR:"*":CODE.DEST:"*":RIB.BENEF:"*":DATE.DOC:"*":MNT.PROVISION:"*":MOTIF.REJET
        EB.SystemTables.setE()*-----------------------------------------------------------------------------
* <Rating>-31</Rating>
*-----------------------------------------------------------------------------
$PACKAGE EB.BZLocalRoutinesEnq1
    SUBROUTINE NOFILE.BZ.MDP.DOC.EMIS.CHQ(TABLEAU)
$USING EB.API
$USING EB.SystemTables
$USING EB.Reports
$USING EB.DataAccess
$USING EB.ErrorProcessing
$USING EB.BZLocalTable1
$USING EB.BZLocalTable2
$USING EB.BZLocalTable3

*Modification History:
*-----------------------------------------------------------------------------
*ZIT-UPG-R09-R13  : GLOBUS.BP TO ../T24_BP, $INSERT BP to $INCLUDE BZDEV.BP
*ZIT-UPG-R13-R19  : COMMENTED OPF,F.READ FOR USER APP;INITIALISED VARIABLES
*-----------------------------------------------------------------------------

*ZIT-UPG-R09-R13 / S
*    INCLUDE GLOBUS.BP I_COMMON
*    INCLUDE GLOBUS.BP I_EQUATE
*    INCLUDE GLOBUS.BP I_ENQUIRY.COMMON
*    INCLUDE BP    I_F.BZ.MDP.DOC.EMIS.CHQ
*    INCLUDE GLOBUS.BP I_F.ACCOUNT
*    INCLUDE GLOBUS.BP I_F.USER
$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_ENQUIRY.COMMON
$INSERT I_F.BZ.MDP.DOC.EMIS.CHQ
$INSERT I_F.ACCOUNT
$INSERT I_F.USER
*ZIT-UPG-R09-R13 / E

    GOSUB INITIALISATION
    GOSUB OPENFILES
    GOSUB PROCESS
    RETURN

INITIALISATION:

    V.STATUS.INTER = 4
    V.STATUS.INTRA = 2
    V.CODE.VALEUR = 81

*    FN.USER='F.USER'
*    F.USER=''
*    R.USER=''     ;*NOT NEEDED AS R.USER GIVES THE CURRENT USER INFO
*    ERR1=''

    FN.BZ.MDP.DOC.EMIS.CHQ='F.BZ.MDP.DOC.EMIS.CHQ'
    F.BZ.MDP.DOC.EMIS.CHQ=''
    R.CHEQUE=''
	BZ.MDP.ERR=''
    CHEQUE.ID=''

    FN.ACCOUNT='F.ACCOUNT'
    F.ACCOUNT=''
	R.ACCOUNT.REC=''
	ERR1=''

    RETURN

OPENFILES:

    CALL OPF(FN.BZ.MDP.DOC.EMIS.CHQ,F.BZ.MDP.DOC.EMIS.CHQ)
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)
    CALL OPF(FN.USER,F.USER)
    RETURN
PROCESS:

*    CALL F.READ (FN.USER,OPERATOR,R.USER,F.USER,ERR1)
    V.DEPART.CODE=R.USER<EB.USE.DEPARTMENT.CODE>

    DATE.LIMIT = TODAY
    DAYS.LIMIT = "-03W"
    CALL CDT('',DATE.LIMIT ,DAYS.LIMIT )
	SEL.LIST=''
	TOTAL.COUNT=''
	CHEQUE.ERROR=''
    CMD= "SELECT ":FN.BZ.MDP.DOC.EMIS.CHQ:" WITH (( CODE.DEST EQ 25 AND STATUT EQ ":V.STATUS.INTRA:" ) OR (  CODE.DEST NE 25 AND STATUT EQ ":V.STATUS.INTER:")) AND CODE.VALEUR EQ ":V.CODE.VALEUR:" AND DATE.DOC GE ":DATE.LIMIT
    CALL EB.READLIST(CMD, SEL.LIST, '', TOTAL.COUNT, CHEQUE.ERROR)
    FOR COMPTEUR=1 TO TOTAL.COUNT
        REMOVE CHEQUE.ID FROM SEL.LIST SETTING POS
        CALL F.READ(FN.BZ.MDP.DOC.EMIS.CHQ,CHEQUE.ID,R.CHEQUE,F.BZ.MDP.DOC.EMIS.CHQ,BZ.MDP.ERR)

        V.NUM.CPT=R.CHEQUE<DOC.EMI.NUM.CPT>
        CALL F.READ(FN.ACCOUNT,V.NUM.CPT,R.ACCOUNT.REC,F.ACCOUNT,ERR1)
        V.DEPT.ACCT.OFFICER = R.ACCOUNT.REC<AC.ACCOUNT.OFFICER>

        IF V.DEPT.ACCT.OFFICER EQ V.DEPART.CODE THEN
            MNT.CHEQUE = R.CHEQUE<DOC.EMI.MNT.CHEQUE>
            NUM.CHEQUE=R.CHEQUE<DOC.EMI.NUM.CHEQUE>
            RIB.TIREUR=R.CHEQUE<DOC.EMI.RIB.TIREUR>
            CODE.DEST=R.CHEQUE<DOC.EMI.CODE.DEST>
            RIB.BENEF=R.CHEQUE<DOC.EMI.RIB.BENEF>
            DATE.DOC=R.CHEQUE<DOC.EMI.DATE.DOC>
            MNT.PROVISION=R.CHEQUE<DOC.EMI.MNT.PROVISION>
            MOTIF.REJET=R.CHEQUE<DOC.EMI.MOTIF.REJET>
            TABLEAU<-1>=CHEQUE.ID:"*":MNT.CHEQUE:"*":NUM.CHEQUE:"*":RIB.TIREUR:"*":CODE.DEST:"*":RIB.BENEF:"*":DATE.DOC:"*":MNT.PROVISION:"*":MOTIF.REJET
        END

    NEXT COMPTEUR
    RETURN
END
